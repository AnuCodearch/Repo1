<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Shiju" failures="0" tests="3" name="Default test" time="0.128" errors="0" timestamp="2022-08-23T20:38:50 IST">
  <testcase classname="testClasses.KiteLoginTest1" name="@BeforeClass openBrowser" time="0.058">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\Dell\SeleniumWorkspace\investmentBanking\investmentBanking\src\main\resources\driver\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\Dell\SeleniumWorkspace\investmentBanking\investmentBanking\src\main\resources\driver\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at baseClasses.BaseClass.initializeBrowser(BaseClass.java:13)
at testClasses.KiteLoginTest1.openBrowser(KiteLoginTest1.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass openBrowser -->
  <testcase classname="testClasses.KiteLoginTest1" name="@BeforeMethod beforemethod_refresh" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod_refresh -->
  <testcase classname="testClasses.KiteLoginTest1" name="@AfterMethod takesceenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod takesceenshot -->
  <testcase classname="testClasses.KiteLoginTest1" name="@BeforeMethod beforemethod_refresh" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod_refresh -->
  <testcase classname="testClasses.KiteLoginTest1" name="@AfterMethod takesceenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod takesceenshot -->
  <testcase classname="testClasses.KiteLoginTest1" name="@BeforeMethod beforemethod_refresh" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforemethod_refresh -->
  <testcase classname="testClasses.KiteLoginTest1" name="@AfterMethod takesceenshot" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod takesceenshot -->
  <testcase classname="testClasses.KiteLoginTest1" name="@AfterClass closeBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass closeBrowser -->
  <testcase classname="testClasses.KiteLoginTest1" name="LoginScenario1_EnterOnly_UserID" time="0.0">
    <skipped/>
  </testcase> <!-- LoginScenario1_EnterOnly_UserID -->
  <testcase classname="testClasses.KiteLoginTest1" name="LoginScenario2_EnterOnly_Password" time="0.0">
    <skipped/>
  </testcase> <!-- LoginScenario2_EnterOnly_Password -->
  <testcase classname="testClasses.KiteLoginTest1" name="LoginScenario3_EnterNothing" time="0.0">
    <skipped/>
  </testcase> <!-- LoginScenario3_EnterNothing -->
</testsuite> <!-- Default test -->
